<?php

namespace App\DataFixtures;

use App\Entity\AreaPeriod;
use App\Entity\DiaryDay;
use App\Entity\DiaryKeeper;
use App\Entity\Distance;
use App\Entity\Household;
use App\Entity\Interviewer;
use App\Entity\Journey\Journey;
use App\Entity\Journey\Method;
use App\Entity\Journey\Stage;
use App\Entity\User;
use App\Entity\Vehicle;
use App\Features;
use DateInterval;
use DateTime;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Bundle\FixturesBundle\FixtureGroupInterface;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Persistence\ObjectManager;
use Faker;
use RuntimeException;
use function PHPUnit\Framework\assertSame;

class PenTestFixtures extends AbstractTestFixtures implements FixtureGroupInterface, DependentFixtureInterface
{
    public static function getGroups(): array
    {
        return ["pentest"];
    }

    protected ?string $password = 'p3NtE$ts';

    public function load(ObjectManager $manager)
    {
        if (!Features::isEnabled(Features::PENTEST_FIXTURES)) {
            echo "Skipping pen-test fixtures - disabled by Features\n";
            return;
        }

        $this->methods = $manager->getRepository(Method::class)->findAll();

        $diaries = [
            [220500, 1, '2022-05-11', 'tom@ghostlimited.com', 'Tom'],
            [220500, 2, '2022-05-02', 'tom+s@ghostlimited.com', 'Tom S'],
            [220501, 7, '2022-05-11', 'ian.williams+dk0@pentestpartners.com', 'Ian W (DK 0)'],
        ];

        foreach ($diaries as $diary)
            $this->persistAll($manager, $this->createTestDiary(...$diary));

        $manager->persist($this->createInterviewer('Pen test interviewer', 'pen-test-interviewer@example.com', '0000A', [220500, 220501]));
        $manager->persist($this->createInterviewer('Ian W (Int 0)', 'ian.williams+int0@pentestpartners.com', '1000A', [220501]));

        $manager->flush();

        // set up a completed household for API testing data
        $completeDiaryUser = $manager->getRepository(User::class)->findOneBy(['username' => 'tom+s@ghostlimited.com']);
        $completeDiaryUser->getDiaryKeeper()->setDiaryState(DiaryKeeper::STATE_APPROVED);
        $completeDiaryUser->getDiaryKeeper()->getHousehold()->setSubmittedAt(new DateTime('2022-05-11 13:00'));
        $completeDiaryUser->getDiaryKeeper()->getHousehold()->setSubmittedBy('pen-test-interviewer@example.com');
        $manager->flush();
    }
}
